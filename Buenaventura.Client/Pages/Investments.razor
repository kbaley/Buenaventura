@page "/Investments"
@using Buenaventura.Client.Services
@using Buenaventura.Shared
@inject IInvestmentService investmentService
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h4" GutterBottom="true">Investments</MudText>

@if (investments == null)
{
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
}
else
{
    <MudText Typo="Typo.h6" GutterBottom="true">Portfolio IRR: @portfolioIrr.ToString("P2")</MudText>

    <MudGrid>
        @foreach (var investment in investments)
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard Elevation="2" Style="height: 250px; display: flex; flex-direction: column;">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@investment.Name (@investment.Symbol)</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" OnClick="() => EditInvestment(investment)" />
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="() => DeleteInvestment(investment)" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent Style="flex: 1;">
                        <MudGrid>
                            <MudItem xs="6">
                                <MudText Typo="Typo.body2">Current Price: @investment.LastPrice.ToString("C2")</MudText>
                                <MudText Typo="Typo.body2">Shares: @investment.Shares.ToString("N2")</MudText>
                                <MudText Typo="Typo.body2">Average Price: @investment.AveragePrice.ToString("C2")</MudText>
                            </MudItem>
                            <MudItem xs="6">
                                <MudText Typo="Typo.body2">IRR: @investment.AnnualizedIrr.ToString("P2")</MudText>
                                <MudText Typo="Typo.body2">Current Value: @investment.CurrentValue.ToString("C2")</MudText>
                                <MudText Typo="Typo.body2">Currency: @investment.Currency</MudText>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                    <MudCardActions Style="justify-content: space-between; padding: 8px;">
                        <MudButton Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add" OnClick="() => BuySellInvestment(investment, true)">Buy</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.Remove" OnClick="() => BuySellInvestment(investment, false)">Sell</MudButton>
                        @if (investment.PaysDividends)
                        {
                            <MudButton Variant="Variant.Filled" Color="Color.Info" StartIcon="@Icons.Material.Filled.AttachMoney" OnClick="() => RecordDividend(investment)">Record Dividend</MudButton>
                        }
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}

@code {
    private IEnumerable<InvestmentForListDto>? investments;
    private double portfolioIrr;

    protected override async Task OnInitializedAsync()
    {
        var investmentList = await investmentService.GetInvestments();
        investments = investmentList.Investments;
        portfolioIrr = investmentList.PortfolioIrr;
    }

    private void EditInvestment(InvestmentForListDto investment)
    {
        NavigationManager.NavigateTo($"/Investments/Edit/{investment.InvestmentId}");
    }

    private async Task DeleteInvestment(InvestmentForListDto investment)
    {
        // TODO: Implement delete functionality
    }

    private void BuySellInvestment(InvestmentForListDto investment, bool isBuy)
    {
        NavigationManager.NavigateTo($"/Investments/BuySell/{investment.InvestmentId}?isBuy={isBuy}");
    }

    private void RecordDividend(InvestmentForListDto investment)
    {
        NavigationManager.NavigateTo($"/Investments/Dividend/{investment.InvestmentId}");
    }
}