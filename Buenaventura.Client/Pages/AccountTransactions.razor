@page "/account/{accountId:guid}"
@using Buenaventura.Client.Services
@using Buenaventura.Dtos
@using Buenaventura.Shared
@inject IAccountService AccountService

<MudText Typo="Typo.h4" GutterBottom="true">@Account.Name</MudText>

<MudTable ServerData="ServerReload" Hover="true" Bordered="true" Striped="true" Dense="true" 
          Loading="@loading" @ref="transactionTable" RowsPerPage="25" Elevation="6"
>
    <ToolBarContent>
        <MudText Typo="Typo.h6">@Account.Name</MudText>
        <MudSpacer/>
        <div style="width: 400px;">
            <MudTextField T="string" Value="@searchString" ValueChanged="@(s => OnSearchChanged(s))" Placeholder="Search" Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"
                          Clearable="true" Immediate="true"
            />
        </div>
    </ToolBarContent>
    <HeaderContent>
        <MudTh Style="width: 125px;">Date</MudTh>
        <MudTh Style="width: 175px;">Vendor</MudTh>
        <MudTh Style="width: 200px;">Category</MudTh>
        <MudTh Class="flex-grow-1">Description</MudTh>
        <MudTh Class="transaction-amount">Debit</MudTh>
        <MudTh Class="transaction-amount">Credit</MudTh>
        <MudTh Class="transaction-amount">Balance</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Date">@context.TransactionDate.ToString("MM/dd/yyyy")</MudTd>
        <MudTd DataLabel="Vendor">@context.Vendor</MudTd>
        <MudTd DataLabel="Category">@context.CategoryDisplay</MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
        <MudTd DataLabel="Debit" Class="transaction-amount">@context.Debit?.ToString("N2")</MudTd>
        <MudTd DataLabel="Credit" Class="transaction-amount">@context.Credit?.ToString("N2")</MudTd>
        <MudTd DataLabel="Balance" Class="transaction-amount">
            @if (string.IsNullOrEmpty(searchString))
            {
                @context.RunningTotal.ToString("N2")
            }
            else
            {
                <span>--</span>   
            }
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    [Parameter] public Guid AccountId { get; set; }
    private AccountWithBalance Account { get; set; } = new();
    private TransactionListModel transactions = new();
    private string searchString = string.Empty;
    private Guid previousAccountId;
    private bool loading = true;
    MudTable<TransactionForDisplay>? transactionTable;


    protected override async Task OnParametersSetAsync()
    {
        if (AccountId != previousAccountId)
        {
            loading = true;
            Account = await AccountService.GetAccount(AccountId);
            searchString = string.Empty;
            if (transactionTable != null)
            {
                await transactionTable.ReloadServerData();
            }
            loading = false;
            previousAccountId = AccountId;
        }
    }

    private async Task OnSearchChanged(string text)
    {
        searchString = text;
        if (transactionTable != null)
        {
            await transactionTable.ReloadServerData();
        }
    }

    private async Task<TableData<TransactionForDisplay>> ServerReload(TableState state, CancellationToken token)
    {
        transactions = await AccountService.GetTransactions(AccountId, searchString, state.Page, state.PageSize);
        return new TableData<TransactionForDisplay>
        {
            TotalItems = transactions.TotalTransactionCount,
            Items = transactions.Transactions,
        };
    }

}