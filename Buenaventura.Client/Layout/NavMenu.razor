@using Buenaventura.Client.Services
@using Buenaventura.Shared
@inject IAccountService accountService
@inject AccountSyncService accountSyncService

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>

    @foreach (var account in accounts.Where(a => !a.IsHidden).OrderBy(a => a.DisplayOrder))
    {
        <MudNavLink Href="@($"account/{account.AccountId}")" Match="NavLinkMatch.Prefix"
                    Icon="@(GetIcon(account.AccountType))">
            <MudGrid>
                <MudItem xs="8">@account.Name</MudItem>
                <MudItem xs="4" Class="d-flex justify-end">
                    @account.CurrentBalance.ToString("N2")
                </MudItem>
            </MudGrid>
        </MudNavLink>
    }

</MudNavMenu>

@code {
    private IEnumerable<AccountWithBalance> accounts = [];

    protected override async Task OnInitializedAsync()
    {
        accounts = await accountService.GetAccounts();
        accountSyncService.OnAccountsUpdated += OnAccountsUpdated; 
        await base.OnInitializedAsync();
    }

    private async Task OnAccountsUpdated()
    {
        accounts = await accountService.GetAccounts();
        StateHasChanged();
    }

    private string? GetIcon(string accountType)
    {
        var icon = accountType switch
        {
            "Bank Account" => Icons.Material.Outlined.AccountBalance,
            "Loan" => Icons.Material.Outlined.Money,
            "Credit Card" => Icons.Material.Outlined.CreditCard,
                "Asset" => Icons.Material.Filled.DirectionsCar,
            _ => Icons.Material.Filled.AttachMoney
        };
        return icon;
    }

}
