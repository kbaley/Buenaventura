@namespace Buenaventura.Client

<div class="mud-input-control mud-input-input-control">
    <div class="mud-input-control-input-container">
        <div class="mud-input mud-input-text mud-input-underline mud-typography-inherit">
            <InputText
                class="mud-input-slot mud-input-root mud-input-root-text"
                @bind-Value="@Value"
                @oninput="@HandleInput"
                @onkeydown="@OnKeyDown"/>
            <div class="mud-input-slot mud-input-root mud-input-root-text" style="display:none"
                 tabindex="-1"></div>
        </div>
    </div>
</div>

@code {

    [Parameter] public string Value { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public EventCallback<KeyboardEventArgs> OnKeyDown { get; set; }

    private async Task HandleInput(ChangeEventArgs args)
    {
        var input = args.Value?.ToString() ?? "";
        var rawDigits = new string(input.Where(char.IsDigit).ToArray());
        rawDigits = rawDigits.PadLeft(3, '0');
        var debitForEdit = "0.00";
        if (decimal.TryParse(rawDigits.Insert(rawDigits.Length - 2, "."), out var parsedAmount))
        {
            debitForEdit = parsedAmount.ToString("0.00");
        }

        Value = debitForEdit;

        if (ValueChanged.HasDelegate)
        {
            await ValueChanged.InvokeAsync(debitForEdit);
        }
    }

}