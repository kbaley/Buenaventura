// <auto-generated />
using System;
using Buenaventura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Buenaventura.Migrations
{
    [DbContext(typeof(BuenaventuraDbContext))]
    [Migration("20250423023114_CategoryIncludeInReports")]
    partial class CategoryIncludeInReports
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Buenaventura.Domain.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_type");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("currency");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer")
                        .HasColumnName("display_order");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("boolean")
                        .HasColumnName("is_hidden");

                    b.Property<decimal?>("MortgagePayment")
                        .HasColumnType("numeric")
                        .HasColumnName("mortgage_payment");

                    b.Property<string>("MortgageType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mortgage_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vendor");

                    b.HasKey("AccountId")
                        .HasName("pk_accounts");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<bool>("IncludeInReports")
                        .HasColumnType("boolean")
                        .HasColumnName("include_in_reports");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("parent_category_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("CategoryId")
                        .HasName("pk_categories");

                    b.HasIndex("ParentCategoryId")
                        .HasDatabaseName("ix_categories_parent_category_id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Configuration", b =>
                {
                    b.Property<Guid>("ConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("configuration_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("ConfigurationId")
                        .HasName("pk_configuration");

                    b.ToTable("configuration", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Currency", b =>
                {
                    b.Property<Guid>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("currency_id");

                    b.Property<DateTime>("LastRetrieved")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_retrieved");

                    b.Property<decimal>("PriceInUsd")
                        .HasColumnType("numeric")
                        .HasColumnName("price_in_usd");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("symbol");

                    b.HasKey("CurrencyId")
                        .HasName("pk_currencies");

                    b.ToTable("currencies", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contact_name");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("region");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street_address");

                    b.HasKey("CustomerId")
                        .HasName("pk_customers");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Investment", b =>
                {
                    b.Property<Guid>("InvestmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("investment_id");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("currency");

                    b.Property<bool>("DontRetrievePrices")
                        .HasColumnType("boolean")
                        .HasColumnName("dont_retrieve_prices");

                    b.Property<decimal>("LastPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("last_price");

                    b.Property<DateTime>("LastPriceRetrievalDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_price_retrieval_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("PaysDividends")
                        .HasColumnType("boolean")
                        .HasColumnName("pays_dividends");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("symbol");

                    b.HasKey("InvestmentId")
                        .HasName("pk_investments");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_investments_category_id");

                    b.ToTable("investments", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.InvestmentCategory", b =>
                {
                    b.Property<Guid>("InvestmentCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("investment_category_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("numeric")
                        .HasColumnName("percentage");

                    b.HasKey("InvestmentCategoryId")
                        .HasName("pk_investment_categories");

                    b.ToTable("investment_categories", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.InvestmentTransaction", b =>
                {
                    b.Property<Guid>("InvestmentTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("investment_transaction_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.Property<Guid>("InvestmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("investment_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<decimal>("Shares")
                        .HasColumnType("numeric")
                        .HasColumnName("shares");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid")
                        .HasColumnName("transaction_id");

                    b.HasKey("InvestmentTransactionId")
                        .HasName("pk_investment_transactions");

                    b.HasIndex("InvestmentId")
                        .HasDatabaseName("ix_investment_transactions_investment_id");

                    b.HasIndex("TransactionId")
                        .HasDatabaseName("ix_investment_transactions_transaction_id");

                    b.ToTable("investment_transactions", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Invoice", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("invoice_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric")
                        .HasColumnName("balance");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("invoice_number");

                    b.Property<bool>("IsPaidInFull")
                        .HasColumnType("boolean")
                        .HasColumnName("is_paid_in_full");

                    b.Property<DateTimeOffset?>("LastSentToCustomer")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_sent_to_customer");

                    b.HasKey("InvoiceId")
                        .HasName("pk_invoices");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_invoices_customer_id");

                    b.ToTable("invoices", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.InvoiceLineItem", b =>
                {
                    b.Property<Guid>("InvoiceLineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("invoice_line_item_id");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uuid")
                        .HasColumnName("invoice_id");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric")
                        .HasColumnName("quantity");

                    b.Property<decimal>("UnitAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("unit_amount");

                    b.HasKey("InvoiceLineItemId")
                        .HasName("pk_invoice_line_items");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_invoice_line_items_category_id");

                    b.HasIndex("InvoiceId")
                        .HasDatabaseName("ix_invoice_line_items_invoice_id");

                    b.ToTable("invoice_line_items", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("transaction_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<decimal>("AmountInBaseCurrency")
                        .HasColumnType("numeric")
                        .HasColumnName("amount_in_base_currency");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid?>("DividendInvestmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("dividend_investment_id");

                    b.Property<string>("DownloadId")
                        .HasColumnType("text")
                        .HasColumnName("download_id");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("entered_date");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uuid")
                        .HasColumnName("invoice_id");

                    b.Property<bool>("IsReconciled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_reconciled");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("transaction_date");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer")
                        .HasColumnName("transaction_type");

                    b.Property<string>("Vendor")
                        .HasColumnType("text")
                        .HasColumnName("vendor");

                    b.HasKey("TransactionId")
                        .HasName("pk_transactions");

                    b.HasIndex("AccountId")
                        .HasDatabaseName("ix_transactions_account_id");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_transactions_category_id");

                    b.HasIndex("DividendInvestmentId")
                        .HasDatabaseName("ix_transactions_dividend_investment_id");

                    b.HasIndex("InvoiceId")
                        .HasDatabaseName("ix_transactions_invoice_id");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Transfer", b =>
                {
                    b.Property<Guid>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("transfer_id");

                    b.Property<Guid>("LeftTransactionId")
                        .HasColumnType("uuid")
                        .HasColumnName("left_transaction_id");

                    b.Property<Guid>("RightTransactionId")
                        .HasColumnType("uuid")
                        .HasColumnName("right_transaction_id");

                    b.HasKey("TransferId")
                        .HasName("pk_transfers");

                    b.HasIndex("LeftTransactionId")
                        .IsUnique()
                        .HasDatabaseName("ix_transfers_left_transaction_id");

                    b.HasIndex("RightTransactionId")
                        .IsUnique()
                        .HasDatabaseName("ix_transfers_right_transaction_id");

                    b.ToTable("transfers", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("UserId")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Vendor", b =>
                {
                    b.Property<Guid>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("vendor_id");

                    b.Property<Guid>("LastTransactionCategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("last_transaction_category_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("VendorId")
                        .HasName("pk_vendors");

                    b.ToTable("vendors", (string)null);
                });

            modelBuilder.Entity("Buenaventura.Domain.Category", b =>
                {
                    b.HasOne("Buenaventura.Domain.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("fk_categories_categories_parent_category_id");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Buenaventura.Domain.Investment", b =>
                {
                    b.HasOne("Buenaventura.Domain.InvestmentCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_investments_investment_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Buenaventura.Domain.InvestmentTransaction", b =>
                {
                    b.HasOne("Buenaventura.Domain.Investment", null)
                        .WithMany("Transactions")
                        .HasForeignKey("InvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_investment_transactions_investments_investment_id");

                    b.HasOne("Buenaventura.Domain.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_investment_transactions_transactions_transaction_id");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Buenaventura.Domain.Invoice", b =>
                {
                    b.HasOne("Buenaventura.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_invoices_customers_customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Buenaventura.Domain.InvoiceLineItem", b =>
                {
                    b.HasOne("Buenaventura.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_invoice_line_items_categories_category_id");

                    b.HasOne("Buenaventura.Domain.Invoice", "Invoice")
                        .WithMany("LineItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_invoice_line_items_invoices_invoice_id");

                    b.Navigation("Category");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Buenaventura.Domain.Transaction", b =>
                {
                    b.HasOne("Buenaventura.Domain.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_accounts_account_id");

                    b.HasOne("Buenaventura.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_transactions_categories_category_id");

                    b.HasOne("Buenaventura.Domain.Investment", null)
                        .WithMany("Dividends")
                        .HasForeignKey("DividendInvestmentId")
                        .HasConstraintName("fk_transactions_investments_dividend_investment_id");

                    b.HasOne("Buenaventura.Domain.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("fk_transactions_invoices_invoice_id");

                    b.Navigation("Account");

                    b.Navigation("Category");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Buenaventura.Domain.Transfer", b =>
                {
                    b.HasOne("Buenaventura.Domain.Transaction", "LeftTransaction")
                        .WithOne("LeftTransfer")
                        .HasForeignKey("Buenaventura.Domain.Transfer", "LeftTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transfers_transactions_left_transaction_id");

                    b.HasOne("Buenaventura.Domain.Transaction", "RightTransaction")
                        .WithOne("RightTransfer")
                        .HasForeignKey("Buenaventura.Domain.Transfer", "RightTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transfers_transactions_right_transaction_id");

                    b.Navigation("LeftTransaction");

                    b.Navigation("RightTransaction");
                });

            modelBuilder.Entity("Buenaventura.Domain.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Buenaventura.Domain.Investment", b =>
                {
                    b.Navigation("Dividends");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Buenaventura.Domain.Invoice", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("Buenaventura.Domain.Transaction", b =>
                {
                    b.Navigation("LeftTransfer");

                    b.Navigation("RightTransfer");
                });
#pragma warning restore 612, 618
        }
    }
}
